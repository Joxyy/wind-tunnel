#include <NewPing.h>
#include <LiquidCrystal_I2C.h>

#define enA 3 
#define in1 5 
#define in2 4

#define TRIGGER_PIN  12
#define ECHO_PIN     11
#define MAX_DISTANCE 200

int a, max_h;  //distance
int k=65;  //duty_cycle
int change=0; //flg - height changed?

NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);
LiquidCrystal_I2C lcd(0x27,16,2);

ISR(PCINT1_vect)  //interrupt service routine
{
   change=1; 
   
   switch ((~PINC) & 0x05)
   {
   case 0x01: //LEFT BUTTON --
    if(k>10) k=k-5;
    if(k<65) k=0;
   break;
   case 0x04: //RIGHT BUTTON ++
    if(k<65) k=65;
    if(k<245 && a<23) k=k+5;
   break;
 }
}


void setup() {
  Serial.begin(9600);
  
  lcd.init();
  lcd.init();
  lcd.backlight();
  delay(1000);

  pinMode(enA, OUTPUT);
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
 
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);

  max_h=sonar.ping_cm();

  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Trenutna visina ");

  lcd.setCursor(0,1);
  lcd.print("0 cm");
  
  DDRC = 0x00; //port C -> input
  PCICR = (1 << PCIE1); //interrupt permission (if state changed) 
  PCMSK1 = 0x05; //... pin state changed - pin PCINT10, or pin PCINT8
  
  sei(); //I = 1 (global interrupt permission)
}
void  loop() {
  if(change)
  {
     analogWrite(enA, k);
     delay(200);


     lcd.clear();
     lcd.setCursor(0,0);
     lcd.print("Trenutna visina ");

     delay(2000); 
     a=sonar.ping_cm();
     a=max_h-a;

     lcd.setCursor(0,1);
     lcd.print(a, DEC);
     lcd.print(" cm");
     lcd.setCursor(0,1);

     change=0;
  }
}
 
